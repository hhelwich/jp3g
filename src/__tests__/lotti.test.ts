import { idct } from '../dct.reference.decode'
import coeff from './images/lotti-8-4:4:4-90.coeff'
import { yCbCr2Rgb } from '../color-rgb.decode'
import { decenter } from '../dct.center.decode'

const clampByte = (x: number) => (x < 0 ? 0 : x > 255 ? 255 : Math.round(x))

describe('Test image', () => {
  it('foo', () => {
    const yActual = decenter(idct(coeff[0]))
    const cbActual = decenter(idct(coeff[1]))
    const crActual = decenter(idct(coeff[2]))
    const data = []
    for (let i = 0; i < 64; i += 1) {
      const [r, g, b] = yCbCr2Rgb([yActual[i], cbActual[i], crActual[i]])
      data[i * 4 + 0] = clampByte(r)
      data[i * 4 + 1] = clampByte(g)
      data[i * 4 + 2] = clampByte(b)
      data[i * 4 + 3] = 255
    }
    expect(data).toEqual(
      // prettier-ignore
      [
        148,162,124,255,167,182,169,255,151,169,171,255,218,239,236,255,231,250,
        247,255,223,239,251,255,234,251,255,255,219,240,249,255,107,111,91,255,
        52,59,57,255,195,206,220,255,219,232,250,255,220,234,253,255,161,175,
        198,255,215,233,255,255,220,243,255,255,115,115,91,255,117,121,104,255,
        37,46,44,255,207,217,230,255,119,130,143,255,111,126,128,255,170,190,
        186,255,184,208,205,255,142,142,123,255,124,129,104,255,63,72,57,255,46,
        53,59,255,15,20,25,255,114,123,106,255,121,136,108,255,125,143,121,255,
        199,200,211,255,182,188,186,255,75,81,82,255,19,20,37,255,23,20,38,255,
        65,63,61,255,120,122,111,255,188,191,187,255,194,196,211,255,179,184,
        186,255,62,69,62,255,35,37,36,255,41,36,41,255,38,31,35,255,94,89,94,
        255,213,210,219,255,130,130,112,255,122,126,99,255,136,143,100,255,141,
        147,97,255,131,132,95,255,41,38,27,255,27,25,28,255,41,44,47,255,137,
        134,92,255,134,134,87,255,159,166,99,255,167,176,95,255,167,172,111,255,
        106,107,88,255,19,23,28,255,10,21,23,255
      ]
    )
  })
})
